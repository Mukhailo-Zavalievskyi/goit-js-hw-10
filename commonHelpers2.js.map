{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const form = document.querySelector('.form');\n\n  form.addEventListener('submit', function (event) {\n    event.preventDefault();\n\n    const delayInput = form.querySelector('[name=\"delay\"]');\n    const stateInput = form.querySelector('[name=\"state\"]');\n    const delay = parseInt(delayInput.value);\n\n    const promise = new Promise((resolve, reject) => {\n      if (stateInput.value === 'fulfilled') {\n        setTimeout(() => resolve(delay), delay);\n      } else {\n        setTimeout(() => reject(delay), delay);\n      }\n    });\n\n    promise.then((delay) => {\n      // Виведення повідомлення при вдалому виконанні промісу\n      iziToast.success({\n        title: 'Success',\n        message: `✅ Fulfilled promise in ${delay}ms`,\n      });\n    }).catch((delay) => {\n      // Виведення повідомлення при невдалому виконанні промісу\n      iziToast.error({\n        title: 'Error',\n        message: `❌ Rejected promise in ${delay}ms`,\n      });\n    });\n\n    // Скидання значень полів форми\n    form.reset();\n  });\n});\n"],"names":["form","event","delayInput","stateInput","delay","resolve","reject","iziToast"],"mappings":"oGAGA,SAAS,iBAAiB,mBAAoB,UAAY,CACxD,MAAMA,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAU,SAAUC,EAAO,CAC/CA,EAAM,eAAc,EAEpB,MAAMC,EAAaF,EAAK,cAAc,gBAAgB,EAChDG,EAAaH,EAAK,cAAc,gBAAgB,EAChDI,EAAQ,SAASF,EAAW,KAAK,EAEvB,IAAI,QAAQ,CAACG,EAASC,IAAW,CAC3CH,EAAW,QAAU,YACvB,WAAW,IAAME,EAAQD,CAAK,EAAGA,CAAK,EAEtC,WAAW,IAAME,EAAOF,CAAK,EAAGA,CAAK,CAE7C,CAAK,EAEO,KAAMA,GAAU,CAEtBG,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,0BAA0BH,KAC3C,CAAO,CACP,CAAK,EAAE,MAAOA,GAAU,CAElBG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,yBAAyBH,KAC1C,CAAO,CACP,CAAK,EAGDJ,EAAK,MAAK,CACd,CAAG,CACH,CAAC"}